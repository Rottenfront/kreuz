#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct Params
{
    uint width;
    uint height;
    float iTime;
};

constant uint3 gl_WorkGroupSize [[maybe_unused]] = uint3(16u, 16u, 1u);

kernel void main0(device Params& _24 [[buffer(0)]], texture2d<float, access::write> image [[texture(1)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])
{
    uint2 xy = gl_GlobalInvocationID.xy;
    float2 fragCoord = (float2(gl_GlobalInvocationID.xy) / float2(float(_24.width), float(_24.height))) - float2(0.5);
    float4 fragColor = float4(fragCoord.x + 0.5, fragCoord.y + 0.5, 0.5 + (0.5 * sin(_24.iTime)), 1.0);
    image.write(fragColor, uint2(int2(xy)));
}

