// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Also licensed under MIT license, at your choice.

// Simple compute shader for generating an image
// When updating, remember to recompile using ninja.

#version 450
layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0) restrict buffer Params {
    uint width;
    uint height;
    float iTime;
};

layout(rgba8, set = 0, binding = 1) uniform restrict writeonly image2D image;

void main() {
    uvec2 xy = gl_GlobalInvocationID.xy;
    vec2 fragCoord = vec2(gl_GlobalInvocationID.xy) / vec2(float(width), float(height)) - 0.5;

    // Shadertoy-like code can go here.
    vec4 fragColor = vec4(fragCoord.x + 0.5, fragCoord.y + 0.5, 0.5 + 0.5 * sin(iTime), 1.0);

    imageStore(image, ivec2(xy), fragColor);
}
